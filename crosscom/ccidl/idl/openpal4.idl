module(rust) shared::openpal4::comdef;

import crosscom.idl;
import radiance.idl;

[uuid(f3d7f0fd-20ca-450c-bd66-ad019b984a54)]
interface IOpenPAL4Director: IDirector {
    [internal(), rust()]
    &'static shared::openpal4::director::OpenPAL4Director get();
}

[uuid(981884a7-63e8-4ee1-96f1-6efd259ebe3b)]
class OpenPAL4Director: IOpenPAL4Director {}

[uuid(f6d70031-86e7-4efa-b1c5-5196063441ea)]
interface IPal4ActorAnimationController: IComponent {
    [internal(), rust()]
    crosscom::Void play_animation(Vec<Vec<radiance::components::mesh::skinned_mesh::AnimKeyFrame>> keyframes, Vec<radiance::components::mesh::event::AnimationEvent> events, shared::openpal4::actor::Pal4ActorAnimationConfig config);

    void unhold();
    bool animation_completed();
}

[uuid(e262bcd6-41fd-4cfd-a2fd-7376421b6ae5)]
class Pal4ActorAnimationController: IPal4ActorAnimationController, IAnimationEventObserver {}

[uuid(9ccfa4a1-16f9-483c-95d8-6095fbf24e09)]
interface IPal4ActorController : IComponent {
    void lock_control(bool lock);
}

[uuid(0687035c-b5f3-47e1-9e4a-80fbf57b3a7c)]
class Pal4ActorController: IPal4ActorController {}
